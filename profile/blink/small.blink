type a = array<u8>
type b = map<string, u8>

struct c {
    field: u8
}

enum d = {
    option
}

enum d_tagged<T> = "Type" {
    Some {
        Value: T
    },
    None {}
}

struct e<K, V> {
    key: K,
    value: V
}

struct f {
    ..c,
    some_field: u8
}

event g {
    from: Server,
    type: Reliable,
    call: SingleSync,
    data: (a, b, c, d, d_tagged<unknown>, e<u8, u8>, f)
}